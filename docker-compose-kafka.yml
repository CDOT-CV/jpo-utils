services:
  kafka:
    profiles:
      - all
      - kafka_connect_standalone
      - kafka_full
      - kafka
    image: bitnami/kafka:3.8.0
    hostname: kafka
    restart: ${RESTART_POLICY:-on-failure:3}
    healthcheck:
      test: /opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092 --version || exit 1
      interval: 30s
      start_period: 30s
      timeout: 15s
      retries: 12
    ports:
      - "9092:9092"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G
    volumes:
      - kafka:/bitnami
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9094,CONTROLLER://:9093,EXTERNAL://:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9094,EXTERNAL://${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      KAFKA_BROKER_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CFG_LOG_RETENTION_HOURS: ${KAFKA_LOG_RETENTION_HOURS:-3}
      KAFKA_CFG_LOG_RETENTION_BYTES: ${KAFKA_LOG_RETENTION_BYTES:-10737418240}
      KAFKA_CFG_LOG_SEGMENT_BYTES: ${KAFKA_LOG_SEGMENT_BYTES:-1073741824}
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  kafka-setup:
    profiles:
      - all
      - kafka_full
      - kafka_setup
    image: jpo-jikkou
    build:
      context: jikkou
      dockerfile: Dockerfile.jikkou
    entrypoint: ./kafka_init.sh
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    depends_on:
      kafka:
        condition: service_healthy
        required: false
    environment:
      KAFKA_TOPIC_CREATE_ODE: ${KAFKA_TOPIC_CREATE_ODE:-true}
      KAFKA_TOPIC_CREATE_GEOJSONCONVERTER: ${KAFKA_TOPIC_CREATE_GEOJSONCONVERTER:-true}
      KAFKA_TOPIC_CREATE_CONFLICTMONITOR: ${KAFKA_TOPIC_CREATE_CONFLICTMONITOR:-true}
      KAFKA_TOPIC_CREATE_DEDUPLICATOR: ${KAFKA_TOPIC_CREATE_DEDUPLICATOR:-false}
      KAFKA_TOPIC_CREATE_MECDEPOSIT: ${KAFKA_TOPIC_CREATE_MECDEPOSIT:-false}
      KAFKA_TOPIC_CREATE_INTERSECTION_API: ${KAFKA_TOPIC_CREATE_INTERSECTION_API:-true}

      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      KAFKA_TOPIC_PARTITIONS: ${KAFKA_TOPIC_PARTITIONS:-1}
      KAFKA_TOPIC_REPLICAS: ${KAFKA_TOPIC_REPLICAS:-1}
      KAFKA_TOPIC_MIN_INSYNC_REPLICAS: ${KAFKA_TOPIC_MIN_INSYNC_REPLICAS:-1}
      KAFKA_TOPIC_RETENTION_MS: ${KAFKA_TOPIC_RETENTION_MS:-300000}
      KAFKA_TOPIC_DELETE_RETENTION_MS: ${KAFKA_TOPIC_DELETE_RETENTION_MS:-3600000}
      KAFKA_CUSTOM_TOPIC_RETENTION_MS: ${KAFKA_CUSTOM_TOPIC_RETENTION_MS:-300000}
      
      KAFKA_SECURITY_PROTOCOL: ${KAFKA_SECURITY_PROTOCOL:-PLAINTEXT}
      KAFKA_SASL_MECHANISM: ${KAFKA_SASL_MECHANISM}
      KAFKA_SASL_JAAS_CONFIG: ${KAFKA_SASL_JAAS_CONFIG}
      KAFKA_SSL_ENDPOINT_ALGORITHM: ${KAFKA_SSL_ENDPOINT_ALGORITHM}
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - ${KAFKA_TOPICS_VALUES_FILE:-./jikkou/kafka-topics-values.yaml}:/kafka-topics-values.yaml

  kafka-schema-registry:
    profiles:
      - all
      - kafka_schema_registry
    image: confluentinc/cp-schema-registry:7.7.0
    hostname: schema-registry
    restart: ${RESTART_POLICY:-on-failure:3}
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    depends_on:
      kafka:
        condition: service_healthy
        required: false
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      SCHEMA_REGISTRY_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "NONE"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 30s
      timeout: 10s
      retries: 4
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  kafka-ui:
    profiles:
      - all
      - kafka_full
      - kafka_ui
    hostname: kafka-ui
    image: ghcr.io/kafbat/kafka-ui:v1.1.0
    restart: ${RESTART_POLICY:-on-failure:3}
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    ports:
      - 8001:8080
    depends_on:
      kafka:
        condition: service_healthy
        required: false
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: ${CONNECT_URL:-http://connect:8083}
    logging:
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  kafka:
